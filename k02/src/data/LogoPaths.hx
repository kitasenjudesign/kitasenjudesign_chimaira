package data;
import js.Browser;
import three.Vector2;

/**
 * ...
 * @author nabe
 */
class LogoPaths
{
	static private var points:Array<Array<Vector2>>;

	public function new() 
	{
	}

	/*
108.7,37.8 94.9,37.8 57.3,0 71.1,0
349.2,27.6 321.8,0 335.6,0 363,27.6
368.6,65.8 312.1,9.7 325.9,9.7 382.4,65.8
349.2,65.8 321,37.8 334.8,37.8 363,65.8
386.6,65.8 358.3,37.8 372.1,37.8 400.4,65.8
98.8,47.1 85,47.1 47.4,9.3 61.2,9.3
252.2,103 238.3,103 210.2,74.7 224,74.7
172.5,112.4 186.3,112.4 224,74.7 210.2,74.7
176.9,103 163.1,103 201.7,66.3 182.5,46.9 196.3,46.9 215.5,66.3
287.2,103 273.4,103 321.3,57 310.9,46.6 324.7,46.6 335.1,57
258.4,103 272.2,103 233.6,66.3 252.8,46.9 239,46.9 219.7,66.3
154.5,84.8 140.7,84.8 103.1,47.1 116.9,47.1
108.7,37.8 94.9,37.8 103.4,27.6 85.2,9.3 99,9.3 117.2,27.6
145.8,37.8 132,37.8 94.5,0 108.3,0
80.9,84.6 10.7,84.6 1,74.7 71.4,74.7
325.8,27.6 255.7,27.6 246,37.6 316.3,37.6
555.7,93 468,93 458.3,103 546.2,103
393.7,53.7 445.1,53.7 454.8,63.6 403.2,63.6
80,66.3 66.2,66.3 85,47.1 98.8,47.1
112.9,37.8 126.9,37.8 136.8,47.1 122.7,47.1
126.9,37.8 112.9,37.8 103.1,47.1 117.1,47.1
96.1,57 110.1,57 145.8,94.1 131.8,94.1
110.1,57 96.1,57 76.3,74.7 90.4,74.7
184.2,57 131.4,57 141.5,46.6 174.1,46.6
271.8,122.4 218.9,122.4 229.1,112 261.6,112
353.1,156.6 353.1,93.6 363.5,103.7 363.5,146.4
415.9,85 347.8,85 358,74.7 405.8,74.7
224.8,57 211.2,57 191.6,37.8 205.2,37.8
211.2,57 224.8,57 244.5,37.8 230.9,37.8
374.1,18.1 360.3,18.1 349.2,27.6 363,27.6
382.4,27.6 368.3,27.6 358.3,37.8 372.4,37.8
344.4,66.3 329.7,66.3 282.7,112.4 297.4,112.4
354.6,74.7 339.9,74.7 329.7,66.3 344.4,66.3
452.4,46.6 439.1,46.6 486.7,0 500.1,0
463.1,54.1 449.7,54.1 497.4,7.5 510.7,7.5

<polyline points="441.5,81.8 522.4,0 535.7,0 454.8,81.8
<polyline points="460.4,81.8 535.7,7.5 549.1,7.5 473.7,81.8	
	*/
	
	public static function init():Void {var str:String="367.6,65.8 311.1,9.7 324.9,9.7 381.4,65.8
348.2,65.8 320,37.8 333.8,37.8 362,65.8
251.2,103 223,74.7 209.2,74.7 171.5,112.4 185.3,112.4 216.1,81.6 237.3,103
175.9,103 162.1,103 200.7,66.3 181.5,46.9 195.3,46.9 214.5,66.3
286.2,103 272.4,103 320.3,57 309.9,46.6 323.7,46.6 334.1,57
257.4,103 271.2,103 232.6,66.3 251.8,46.9 238,46.9 218.7,66.3
98,9.3 84.2,9.3 102.4,27.6 100.2,30.2 70.1,0 56.3,0 93.9,37.8 107.7,37.8 116.2,27.6
144.8,37.8 131,37.8 93.5,0 107.3,0
79.9,84.6 9.7,84.6 0,74.7 70.4,74.7
324.8,27.6 254.7,27.6 245,37.6 315.3,37.6
554.7,93 467,93 457.3,103 545.2,103
392.7,53.7 444.1,53.7 453.8,63.6 402.2,63.6
60.2,9.3 46.4,9.3 84,47.1 65.2,66.3 79,66.3 97.8,47.1
115.9,47.1 116.1,47.1 118.9,44.4 121.7,47.1 135.8,47.1 125.9,37.8 111.9,37.8 102.1,47.1 139.7,84.8 153.5,84.8
144.8,94.1 109.1,57 95.1,57 95.1,57 95.1,57 75.3,74.7 89.4,74.7 101.6,63.7 130.8,94.1
183.2,57 130.4,57 140.5,46.6 173.1,46.6
270.8,122.4 217.9,122.4 228.1,112 260.6,112
352.1,156.6 352.1,93.6 362.5,103.7 362.5,146.4
414.9,85 346.8,85 357,74.7 404.8,74.7
229.9,37.8 217,50.3 204.2,37.8 190.6,37.8 210.2,57 223.8,57 243.5,37.8
359.3,18.1 355.7,21.2 334.6,0 320.8,0 348.2,27.6 362,27.6 373.1,18.1
371.1,37.8 371.4,37.8 381.4,27.6 367.3,27.6 357.3,37.8 385.6,65.8 399.4,65.8
353.6,74.7 343.4,66.3 328.7,66.3 281.7,112.4 296.4,112.4 336.7,72.8 338.9,74.7
451.4,46.6 438.1,46.6 485.7,0 499.1,0
462.1,54.1 448.7,54.1 496.4,7.5 509.7,7.5
440.5,81.8 521.4,0 534.7,0 453.8,81.8
459.4,81.8 534.7,7.5 548.1,7.5 472.7,81.8";

	
	var ary:Array<String> = str.split(String.fromCharCode(13));
	
	points = [];
	
	var maxX:Float = -1000;
	var maxY:Float = -1000;
	var minX:Float = 1000;
	var minY:Float = 1000;
	
	var width:Float = 554.7;
	var height:Float = 156.6;
	
	for (i in 0...ary.length) {points[i] = [];var line:String=ary[i];var pstrs:Array<String> = line.split(" ");for (j in 0...pstrs.length) {	var pp:Array<String> = pstrs[j].split(",");	var xx:Float = Std.parseFloat( pp[0] );	var yy:Float = Std.parseFloat( pp[1] );		var v:Vector2 = new Vector2(xx-width/2, -yy+height/2);	points[i].push(v);		maxX = Math.max(maxX,xx);	maxY = Math.max(maxY,yy);	minX = Math.min(minX,xx);	minY = Math.min(minY,yy);}
	}
	
	//554.7
	//156.6
	
	//Browser.window.alert(maxX + " " + maxY);
	//Browser.window.alert(minX + " " + minY);
	
	
	
	}
	
	
	public static function getPaths():Array<Paths> {
		var out:Array<Paths> = [];
		for (i in 0...points.length) {	var p:Paths = new Paths();	p.init(points[i]);	out.push(p);	}
		return out;
	}
	
	
	
	public function getPoint(r:Float, points:Array<Vector2>):Vector2 {	var n			:Int = Math.floor(r * points.length );		var index1:Int = n;	var index2:Int = n+1;		var p1:Vector2 = points[ index1 ];	var p2:Vector2 = (index2>=points.length) ? points[0] : points[ index2 ];
	var p:Vector2 = null;		if(p1!=null && p2!=null){		var xx:Float = r * p1.x + (1 - r) * p2.x;		var yy:Float = r * p1.y + (1 - r) * p2.y;		p = new Vector2(xx, yy);	}else {		if (p1!=null) p = p1;		if (p2!=null) p = p2;	}		return p;
	}
	
	
}